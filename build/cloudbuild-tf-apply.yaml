# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 3600s
substitutions:
  _POLICY_REPO: '/workspace/policy-library' # add path to policies here https://github.com/forseti-security/policy-library/blob/master/docs/user_guide.md#how-to-use-terraform-validator
  _LOGGER_NAME: scc_logging # default value
  _CRITICAL: "1" # default value
  _HIGH: "50" # default value
  _MEDIUM: "50" # default value
  _FUNCTION_NAME: "scc_helper_updated"
  _REPO_NAME: "test-repo"


steps:
- id: 'setup'
  name: $_DEFAULT_REGION-docker.pkg.dev/$PROJECT_ID/$_GAR_REPOSITORY/terraform
  entrypoint: /bin/bash
  args:
  - -c
  - |
   tf_sa_email=${_TF_SA_EMAIL}
    if [[ -n ${tf_sa_email} ]]; then
      echo "Setting up gcloud for impersonation ${tf_sa_email}"
      gcloud config set auth/impersonate_service_account $tf_sa_email
    fi
    echo "Adding bucket information to backends"
    for i in `find -name 'backend.tf'`; do sed -i 's/UPDATE_ME/${_STATE_BUCKET_NAME}/' $i; done

# [START tf-init]
- id: 'tf init'
  name: $_DEFAULT_REGION-docker.pkg.dev/$PROJECT_ID/$_GAR_REPOSITORY/terraform
  entrypoint: /bin/bash
  args:
  - -c
  - |
      ./tf-wrapper.sh init ${BRANCH_NAME}

# [START tf-plan]
- id: 'tf plan'
  name: $_DEFAULT_REGION-docker.pkg.dev/$PROJECT_ID/$_GAR_REPOSITORY/terraform
  entrypoint: /bin/bash
  args:
  - -c
  - |
      ./tf-wrapper.sh plan ${BRANCH_NAME}

# [START tf-validate]
- id: 'tf validate'
  name: $_DEFAULT_REGION-docker.pkg.dev/$PROJECT_ID/$_GAR_REPOSITORY/terraform
  entrypoint: /bin/bash
  args:
  - -c
  - |
      ./tf-wrapper.sh validate ${BRANCH_NAME} ${_POLICY_REPO} ${PROJECT_ID} CLOUDSOURCE

# [START tf-apply]
- id: 'tf apply'
  name: $_DEFAULT_REGION-docker.pkg.dev/$PROJECT_ID/$_GAR_REPOSITORY/terraform
  entrypoint: /bin/bash
  args:
  - -c
  - |
      echo "Setting up gcloud for impersonation ${tf_sa_email}"
      ./tf-wrapper.sh apply ${BRANCH_NAME}

- name: 'gcr.io/cloud-builders/gcloud'
  id: 'scc validator'
  entrypoint: 'bash'
  args:
  - '-c'
  - |-
    sleep 120
    output=$(gcloud functions call ${_FUNCTION_NAME} --data '{"logger_name":"$_LOGGER_NAME", "critical_max": ${_CRITICAL}, "high_max": ${_HIGH}, "medium_max": $_MEDIUM}')
    if [[ "$output" == *"Error"* ]] 
    then
        gcloud logging read "logName=projects/${PROJECT_ID}/logs/${_LOGGER_NAME}" 
        echo "Build Failed"
        exit 1
    else
        gcloud logging read "logName=projects/${PROJECT_ID}/logs/${_LOGGER_NAME}" 
        echo "Build Passed"
        
    fi
 
artifacts:
  objects:
    location: 'gs://${_ARTIFACT_BUCKET_NAME}/terraform/cloudbuild/apply/${BUILD_ID}'
    paths: ['cloudbuild-tf-apply.yaml', 'tmp_plan/*.tfplan']
